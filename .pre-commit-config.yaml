# Pre-commit hooks configuration
# See https://pre-commit.com for more information

default_language_version:
  python: python3.13

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ["--maxkb=500"]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-toml
      - id: check-json
      - id: debug-statements
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: name-tests-test
        args: ["--pytest-test-first"]

  # Python specific
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.9
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        files: ^src/
        args: [--strict, --no-implicit-reexport]
        additional_dependencies:
          - types-pyyaml
          - pydantic
          - click
          - jinja2

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ["-ll"]
        files: ^src/.*\.py$

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [yaml, json]
        exclude: ^.github/workflows/

  # Python upgrade syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.17.0
    hooks:
      - id: pyupgrade
        args: [--py312-plus]

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]

  # GitHub Actions workflow linting
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.1
    hooks:
      - id: actionlint

  # Documentation checks
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: ["--config", ".markdownlint.yml"]
        files: \.(md|markdown)$
        exclude: ^\.github/

  - repo: https://github.com/streetsidesoftware/cspell-cli
    rev: v8.3.0
    hooks:
      - id: cspell
        args: ["--config", ".cspell.json"]
        files: \.(md|markdown|rst|txt)$
        exclude: ^(\.github/|uv\.lock|\.secrets\.baseline)

  - repo: https://github.com/tcort/markdown-link-check
    rev: v3.12.1
    hooks:
      - id: markdown-link-check
        args: ["--config", ".markdown-link-check.json"]
        files: \.(md|markdown)$

  # Check mkdocs build
  - repo: local
    hooks:
      - id: mkdocs-build
        name: mkdocs build check
        entry: bash -c 'if [ -f mkdocs.yml ]; then uv run mkdocs build --strict --quiet; fi'
        language: system
        files: (mkdocs\.yml|^docs/.*\.(md|markdown))
        pass_filenames: false

  # Run tests
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: ["-v", "--tb=short"]

ci:
  autofix_commit_msg: "style: auto fixes from pre-commit hooks"
  autoupdate_commit_msg: "chore: pre-commit autoupdate"
  autoupdate_schedule: weekly
