name: "Setup Python Environment"
description: "Setup Python, uv, and install dependencies with caching"
inputs:
  python-version:
    description: "Python version to install"
    default: "3.13"
    required: false
  uv-version:
    description: "uv version to install"
    default: "0.4.18"
    required: false
  install-command:
    description: "Custom install command (overrides extras)"
    default: ""
    required: false
  extras:
    description: "Extras to install (e.g., 'dev', 'docs', or 'all' for --all-extras)"
    default: "all"
    required: false
  frozen:
    description: "Use frozen dependencies (--frozen flag)"
    default: "true"
    required: false
runs:
  using: "composite"
  steps:
    - name: üêç Setup Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: üì¶ Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: ${{ inputs.uv-version }}
        enable-cache: true
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock

    - name: üîß Install dependencies (custom command)
      if: inputs.install-command != ''
      shell: bash
      run: ${{ inputs.install-command }}

    - name: üîß Install dependencies (standard)
      if: inputs.install-command == ''
      shell: bash
      run: |
        # Build the uv sync command
        FROZEN_FLAG=""
        if [ "${{ inputs.frozen }}" = "true" ]; then
          FROZEN_FLAG="--frozen"
        fi

        if [ "${{ inputs.extras }}" = "all" ]; then
          uv sync $FROZEN_FLAG --all-extras
        elif [ -n "${{ inputs.extras }}" ]; then
          uv sync $FROZEN_FLAG --extra ${{ inputs.extras }}
        else
          uv sync $FROZEN_FLAG
        fi
